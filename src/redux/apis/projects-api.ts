// Importing necessary functions from Redux Toolkit Query
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Creating an API slice using Redux Toolkit Query
const projectsApi = createApi({
    // 'reducerPath' is the name of the reducer that will be added to the Redux store
    reducerPath: "projectsApi",

    // 'baseQuery' is a function that returns the base part of all requests
    baseQuery: fetchBaseQuery({ baseUrl: "http://127.0.0.1:3000" }),

    // 'endpoints' is an object that defines the API endpoints
    endpoints(builder) {
        return {
            getProjects: builder.query({
                // 'providesTags' is used to tag the data cached by this endpoint
                // Here, it tags the data with the tag { type: "Project", id: "LIST" }
                providesTags: () => [{ type: "Project", id: "LIST" }],
                query: () => {
                    return {
                        url: "/get-projects",
                    };
                },
            }),
            addProject: builder.mutation({
                // 'invalidatesTags' is used to specify which tags to invalidate when this mutation is called
                // Here, it invalidates the tag { type: "Project", id: "LIST" }
                // This causes RTK Query to refetch the data for any endpoints that provide this tag
                invalidatesTags: [{ type: "Project", id: "LIST" }],
                query: (data) => {
                    return {
                        url: "/add-project",
                        method: "POST",
                        body: data,
                    };
                },
            }),
            deleteProject: builder.mutation({
                // 'invalidatesTags' is used to specify which tags to invalidate when this mutation is called
                // Here, it invalidates the tag { type: "Project", id: "LIST" }
                // This causes RTK Query to refetch the data for any endpoints that provide this tag
                invalidatesTags: [{ type: "Project", id: "LIST" }],
                query: (id) => {
                    return {
                        url: "/delete-project",
                        method: "DELETE",
                        body: {
                            id,
                        },
                    };
                },
            }),
        };
    },
    // 'tagTypes' is used to specify the types of tags used in this API slice
    // Here, it specifies that the "Project" tag type is used
    // This helps TypeScript understand the types of tags used, and prevents errors when using 'providesTags' and 'invalidatesTags'
    tagTypes: ["Project"],
});

// Exporting the hooks generated by Redux Toolkit Query
export const {
    useAddProjectMutation,
    useDeleteProjectMutation,
    useGetProjectsQuery,
} = projectsApi;
export { projectsApi };
